{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{%
  set classes = [
    'paragraph component__wrapper',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ]
%}
{% block paragraph %}
	<div{{attributes.addClass(classes)}}>
		{% block content %}
      {% set count = 0 %}
      {% for key, item in content.field_banner_item  %}
				{% if  key|first != '#' %}
          {% set count = count + 1 %}
        {% endif %}
			{%  endfor %}
      {% if count >= 2 %}
        {% set sliderclass = 'banner_slider_wrapper' %}
      {% else %}
        {% set sliderclass = '' %}
      {% endif %}
			<div class="banner_wrapper {{ sliderclass }}">
				{% for key, item in content.field_banner_item  %}
					{% if  key|first != '#' %}
						<div class="banner__item">

							<div class="paragraph_banner_image" style="background-image: url('{{ file_url(item['#paragraph'].field_bc_image.entity.field_media_image.entity.fileuri) }}');">
								<div class="container banner_image__container">

									<div class="banner_content">
										<div class="title">{{ item['#paragraph'].field_bc_title[0].value|raw }}</div>
										<div class="des">{{ item['#paragraph'].field_bc_description[0].value|raw }}</div>
                    {% if item['#paragraph'].field_bc_cta[0] %}
										<div class="cta cta_btn">
											{% if item['#paragraph'].field_bc_cta[0].url.external %}
												<a class="cta_btn_link" href="{{ item['#paragraph'].field_bc_cta[0].uri }}" target="_blank" title="Opens in a new window">{{ item['#paragraph'].field_bc_cta[0].title }}</a>
											{% else %}
												<a class="cta_btn_link" href="{{ path(item['#paragraph'].field_bc_cta[0].url.routeName, item['#paragraph'].field_bc_cta[0].url.routeParameters) }}">{{ item['#paragraph'].field_bc_cta[0].title }}</a>
											{% endif %}
										</div>
                    {% endif %}
									</div>
                  {% if item['#paragraph'].field_bc_secondary_cta[0] %}
                    <div class="cta cta_btn cta_btn_2">
                    {% if item['#paragraph'].field_bc_secondary_cta[0].url.external %}
                      <a class="cta_btn_link" href="{{ item['#paragraph'].field_bc_secondary_cta[0].uri }}" target="_blank" title="Opens in a new window">{{ item['#paragraph'].field_bc_secondary_cta[0].title }}</a>
                    {% else %}
                      <a class="cta_btn_link" href="{{ path(item['#paragraph'].field_bc_secondary_cta[0].url.routeName, item['#paragraph'].field_bc_secondary_cta[0].url.routeParameters) }}">{{ item['#paragraph'].field_bc_secondary_cta[0].title }}</a>
                    {% endif %}
										</div>
                  {% endif %}
								</div>
							</div>
            </div>
						{% endif %}
					{%  endfor %}
				</div>
			</div>
		{% endblock %}
	</div>
{% endblock paragraph %}
